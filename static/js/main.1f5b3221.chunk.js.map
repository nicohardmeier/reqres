{"version":3,"sources":["ColorModeSwitcher.js","pages/Login.js","pages/Signup.js","components/ListSkeleton.js","components/AddUserForm.js","pages/List.js","pages/PageNotFound.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","aria-label","variant","color","marginLeft","onClick","icon","Login","useState","email","setEmail","password","setPassword","isLoading","setIsLoading","isError","setIsError","history","useHistory","minH","d","alignItems","justifyContent","spacing","minW","flexDirection","bgClip","textAlign","data-testid","placeholder","value","onChange","event","currentTarget","toLocaleLowerCase","trim","required","type","colorScheme","body","JSON","stringify","fetch","method","headers","then","response","status","push","error","console","log","mb","pr","_hover","Signup","mt","handleSignup","ListSkeleton","noOfLines","AddUserForm","firstName","setFirstName","lastName","setLastName","avatar","setAvatar","toast","useToast","ml","mr","flexWrap","width","m","title","duration","isClosable","List","users","setUsers","isAddUserFormShown","setIsAddUserFormShown","url","usePaginator","initialState","currentPage","setCurrentPage","pagesQuantity","setPagesQuantity","isEditMode","setIsEditMode","userToEdit","setUserToEdit","userFirstName","setUserFirstName","userLastName","setUserLastName","userEmail","setUserEmail","userId","setUserId","userAvatar","setUserAvatar","useEffect","handleFetchUsers","offset","res","json","data","total_pages","handleDeleteUser","id","usersFiltered","filter","user","handleEditUser","_user","index","first_name","last_name","p","initialScale","in","colSpan","isNumeric","map","height","bg","borderRadius","src","boxSize","Edit","Delete","cursor","length","onPageChange","align","justify","w","isInline","PageNotFound","bgGradient","App","theme","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1f5b3221.chunk.js","sourcesContent":["import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","import { useState } from 'react';\nimport {\n  Button,\n  Stack,\n  Input,\n  Box,\n  Text\n} from '@chakra-ui/react';\nimport {\n  Link,\n  useHistory\n} from \"react-router-dom\";\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false)\n  const [isError, setIsError] = useState(false)\n  const url = 'https://reqres.in/api/login'\n\n  let history = useHistory();\n\n  const handleLogin = () => {\n    try {\n      setIsLoading(true)\n      const body = JSON.stringify({\n        \"email\": email,\n        \"password\": password\n      });\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Content-Type': 'application/json',\n        },\n        body: body\n      }\n      ).then((response) => {\n        if (response.status === 200) {\n          history.push(\"/list\")\n        }\n        else {\n          setIsError(true)\n          setIsLoading(false)\n        }\n      })\n    }\n    catch (error) {\n      console.log('error', error)\n    }\n  }\n\n  const handleSignupClick = () => {\n    history.push(\"/signup\")\n\n  }\n\n  return (\n    <Box minH=\"100vh\" d=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n      <Stack spacing={3} minW=\"360px\">\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n          <Text\n            fontSize={[\"4vw\", \"2vw\"]}\n            bgClip=\"text\"\n            textAlign=\"center\"\n          >\n            Reqres App\n          </Text>\n        </Box>\n        <Text fontSize=\"2xl\" textAlign=\"center\"> Welcome back 👋</Text>\n        {isError ? <Text fontSize=\"2xl\" color=\"red\" textAlign=\"center\">Wrong email or password</Text> : null}\n\n        <Input data-testid=\"login__email__input\" placeholder=\"Email\" value={email} onChange={(event) => setEmail(event.currentTarget.value.toLocaleLowerCase().trim())} required />\n        <Input\n          data-testid=\"login__password__input\"\n          placeholder=\"Password\"\n          type=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.currentTarget.value)}\n          required\n        />\n        <Button isLoading={isLoading} colorScheme=\"teal\"\n          onClick={handleLogin}>Login</Button>\n        <Box d=\"flex\" flexDirection=\"column\" >\n          <Box d=\"flex\" flexDirection=\"row\" justifyContent=\"space-around\" mb=\"4\">\n            <Text fontSize=\"l\" pr=\"4\"> Don't have an account yet?</Text>\n            <Box _hover={{\n              color: \"teal\"\n            }}>\n              <Button isLoading={isLoading} colorScheme=\"teal\"\n                onClick={handleSignupClick}>Sign Up</Button>\n            </Box>\n\n          </Box>\n        </Box>\n      </Stack>\n    </Box>\n\n  );\n};\n\nexport default Login;\n","import { useState } from 'react';\nimport {\n  Button,\n  Stack,\n  Input,\n  Box,\n  Text\n} from '@chakra-ui/react';\nimport {\n  Link,\n  useHistory\n} from \"react-router-dom\";\n\nconst Signup = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false)\n  const [isError, setIsError] = useState(false)\n  const url = 'https://reqres.in/api/register'\n\n  let history = useHistory();\n\n  const handleSignup = () => {\n    try {\n      setIsLoading(true)\n      const body = JSON.stringify({\n        \"email\": email,\n        \"password\": password\n      });\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Content-Type': 'application/json',\n        },\n        body: body\n      }\n      ).then((response) => {\n        if (response.status === 200) {\n          history.push(\"/list\")\n        }\n        else {\n          setIsError(true)\n          setIsLoading(false)\n        }\n      })\n    }\n    catch (error) {\n      console.log('error', error)\n    }\n  }\n\n  const handleLoginClick = () => {\n    history.push(\"/\")\n\n  }\n\n  return (\n    <Box minH=\"100vh\" d=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n      <Stack spacing={3} minW=\"360px\">\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n\n          <Text\n            fontSize={[\"4vw\", \"2vw\"]}\n            bgClip=\"text\"\n            textAlign=\"center\"\n          >\n            Signup\n          </Text>\n        </Box>\n\n        <Text fontSize=\"2xl\" mt=\"4\" textAlign=\"center\"> Let's get started 👋</Text>\n        {isError ? <Text fontSize=\"2xl\" color=\"red\" textAlign=\"center\">Wrong email or password </Text> : null}\n        <Input data-testid=\"signup__email__input\" placeholder=\"Email\" value={email} onChange={(event) => setEmail(event.currentTarget.value.toLocaleLowerCase().trim())} />\n        <Input\n          data-testid=\"signup__password__input\"\n          placeholder=\"Password\"\n          type=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.currentTarget.value)}\n        />\n        <Button isLoading={isLoading} colorScheme=\"teal\"\n          onClick={() => handleSignup(email, password, email)}>Sign up</Button>\n        <Box d=\"flex\" flexDirection=\"row\" justifyContent=\"space-around\">\n\n          <Text fontSize=\"l\"> Already have an account?</Text>\n          <Box _hover={{\n            color: \"teal\"\n          }}>\n            <Button isLoading={isLoading} colorScheme=\"teal\"\n              onClick={handleLoginClick}>Login</Button>\n          </Box>\n        </Box>\n\n      </Stack>\n    </Box>\n\n  );\n};\n\nexport default Signup;\n","import {\n    Box,\n    SkeletonText\n} from \"@chakra-ui/react\"\n\nconst ListSkeleton = () => (\n    <Box>\n        <SkeletonText mt=\"4\" noOfLines={11} spacing=\"4\" />\n    </Box >\n\n\n\n)\n\n\nexport default ListSkeleton\n\n","import { useState } from 'react';\nimport {\n    Button,\n    Input,\n    Box,\n    Text,\n    useToast\n} from '@chakra-ui/react';\n\n\nconst AddUserForm = () => {\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [avatar, setAvatar] = useState('');\n\n    const [isLoading, setIsLoading] = useState(false)\n    const [isError, setIsError] = useState(false)\n    const url = 'https://reqres.in/api/users'\n    const toast = useToast()\n\n\n    const handleAddUser = () => {\n        try {\n            setIsLoading(true)\n            const body = JSON.stringify({\n                \"id\": 200,\n                \"first_name\": firstName,\n                \"last_name\": lastName,\n                \"avatar\": avatar,\n                \"email\": email\n            });\n            fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Access-Control-Allow-Origin': '*',\n                    'Content-Type': 'application/json',\n                },\n                body: body\n            }\n            ).then((response) => {\n                if (response.status === 201) {\n                    setIsLoading(false)\n                    toast({\n                        title: \"User Created!\",\n                        status: \"success\",\n                        duration: 6000,\n                        isClosable: true,\n                    })\n                }\n                else {\n                    setIsError(true)\n                    setIsLoading(false)\n                }\n            })\n        }\n        catch (error) {\n            console.log('error', error)\n        }\n    }\n\n    return (\n        <Box d=\"flex\" ml=\"auto\" mr=\"auto\" alignItems=\"center\" justifyContent=\"center\" flexWrap=\"wrap\" width={[\"100%\", \"70%\"]}>\n            {isError ? <Text fontSize=\"2xl\" color=\"red\" textAlign=\"center\">Wrong email </Text> : null}\n            <Input m=\"2\" placeholder=\"firstName\" value={firstName} onChange={(event) => setFirstName(event.currentTarget.value)} required />\n            <Input m=\"2\" placeholder=\"lastName\" value={lastName} onChange={(event) => setLastName(event.currentTarget.value)} required />\n            <Input m=\"2\" placeholder=\"email\" value={email} onChange={(event) => setEmail(event.currentTarget.value)} required />\n            <Input m=\"2\" placeholder=\"avatar\" value={avatar} onChange={(event) => setAvatar(event.currentTarget.value)} required />\n\n            <Button isLoading={isLoading} colorScheme=\"teal\"\n                onClick={handleAddUser}>Submit</Button>\n        </Box>\n\n    );\n};\n\nexport default AddUserForm;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Image } from '@chakra-ui/react';\nimport {\n    Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    Text,\n    Input,\n    Button,\n    useToast,\n    ScaleFade\n} from \"@chakra-ui/react\"\nimport { EditIcon, DeleteIcon } from '@chakra-ui/icons'\nimport {\n    Paginator,\n    Container,\n    Previous,\n    Next,\n    PageGroup,\n    usePaginator\n} from \"chakra-paginator\";\nimport ListSkeleton from '../components/ListSkeleton'\nimport AddUserForm from '../components/AddUserForm'\n\nconst List = () => {\n    const [users, setUsers] = useState()\n    const [isLoading, setIsLoading] = useState(true)\n    const [isAddUserFormShown, setIsAddUserFormShown] = useState(false)\n\n    const url = 'https://reqres.in/api/users'\n    const { currentPage, setCurrentPage } = usePaginator({\n        initialState: { currentPage: 1 }\n    });\n    const [pagesQuantity, setPagesQuantity] = useState()\n    const [isEditMode, setIsEditMode] = useState(false)\n    const [userToEdit, setUserToEdit] = useState()\n    const [userFirstName, setUserFirstName] = useState()\n    const [userLastName, setUserLastName] = useState()\n    const [userEmail, setUserEmail] = useState()\n    const [userId, setUserId] = useState()\n    const [userAvatar, setUserAvatar] = useState()\n    const toast = useToast()\n\n    useEffect(() => {\n        handleFetchUsers(currentPage)\n    }, [currentPage])\n\n    const handleFetchUsers = (offset) => {\n        try {\n            setIsLoading(true)\n            fetch(`${url}?page=${offset}`).then((res) => res.json()).then((response) => {\n                setUsers(response.data);\n                setPagesQuantity(response?.total_pages)\n                setIsLoading(false)\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const handleDeleteUser = (id) => {\n        try {\n            const usersFiltered = users.filter((user) => user.id !== id)\n            setUsers(usersFiltered)\n            fetch(`https://reqres.in/api/users/${id}`, {\n                method: 'DELETE'\n            }\n            ).then((response) => {\n                toast({\n                    title: `User ID:${id} Deleted`,\n                    status: \"warning\",\n                    duration: 6000,\n                    isClosable: true,\n                })\n            })\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    const handleEditUser = (_user, index) => {\n        setUserToEdit(index)\n        setUserFirstName(_user.first_name)\n        setUserLastName(_user.last_name)\n        setUserEmail(_user.email)\n        setUserId(_user.id)\n        setUserAvatar(_user.avatar)\n        setIsEditMode(!isEditMode)\n    }\n\n    const handleUpdateUser = () => {\n        try {\n            const body = JSON.stringify({\n                \"id\": userId,\n                \"avatar\": userAvatar,\n                \"first_name\": userFirstName,\n                \"last_name\": userLastName,\n                \"email\": userEmail\n            });\n            fetch(url, {\n                method: 'PATCH',\n                headers: {\n                    'Access-Control-Allow-Origin': '*',\n                    'Content-Type': 'application/json',\n                },\n                body: body\n            }\n            ).then((response) => {\n                console.log('updated', response)\n                users[userToEdit] = { id: userId, avatar: userAvatar, first_name: userFirstName, last_name: userLastName, email: userEmail }\n                setIsEditMode(false)\n                toast({\n                    title: \"User Updated\",\n                    status: \"success\",\n                    duration: 6000,\n                    isClosable: true,\n                })\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <Box d=\"flex\" p={[\"0\", \"4\"]} flexDirection='column' justifyContent=\"center\">\n            <Box d=\"flex\" width={[\"100%\"]} p=\"8\" ml=\"auto\" mr=\"auto\" flexDirection='row' justifyContent=\"space-around\">\n                <Button isLoading={isLoading} colorScheme=\"teal\"\n                    onClick={() => setIsAddUserFormShown(!isAddUserFormShown)}>{isAddUserFormShown ? \"Hide From\" : \"Add User\"}</Button>\n                {isEditMode ? <Button isLoading={isLoading} colorScheme=\"teal\"\n                    onClick={handleUpdateUser}>SAVE</Button> : null}\n            </Box>\n            {isAddUserFormShown ?\n                <ScaleFade initialScale={0.9} in={isAddUserFormShown}>\n                    <AddUserForm /></ScaleFade> :\n                null}\n            <Text m=\"8\" fontSize={\"24px\"}>Users List</Text>\n            <Box d=\"flex\" width={[\"100%\"]} p=\"8\" ml=\"auto\" mr=\"auto\" flexDirection='column' justifyContent=\"center\">\n                {!isLoading ? (\n                    <>\n                        <Table variant=\"simple\" size={\"sm\"}>\n                            <Thead>\n                                <Tr>\n                                    <Th colSpan={4}></Th>\n                                    <Th >Name</Th>\n                                    <Th>Last Name</Th>\n                                    <Th>Email</Th>\n                                    <Th colSpan={2} isNumeric>Edit</Th>\n                                    <Th colSpan={2} isNumeric>Delete</Th>\n                                </Tr>\n                            </Thead>\n                            <Tbody>\n                                {users && users.map((user, index) => {\n                                    return (\n                                        <Tr key={index} height=\"50px\" _hover={{ bg: '#033747' }}>\n                                            {user && isEditMode && userToEdit === index ?\n                                                <>\n                                                    <Td colSpan={4}><Image mr=\"auto\" ml=\"auto\" borderRadius=\"full\" src={user.avatar} boxSize=\"40px\"\n                                                    /></Td>\n                                                    <Td> <Input variant=\"filled\" placeholder=\"firstName\" value={userFirstName} onChange={(event) => setUserFirstName(event.currentTarget.value)} /></Td>\n                                                    <Td> <Input variant=\"filled\" placeholder=\"lastName\" value={userLastName} onChange={(event) => setUserLastName(event.currentTarget.value)} /></Td>\n                                                    <Td> <Input variant=\"filled\" placeholder=\"email\" value={userEmail} onChange={(event) => setUserEmail(event.currentTarget.value)} /></Td>\n                                                    <Td colSpan={2} onClick={() => handleEditUser(user, index)} isNumeric><EditIcon /></Td>\n                                                    <Td colSpan={2} onClick={() => handleDeleteUser(user.id)} isNumeric><DeleteIcon /></Td>\n                                                </> :\n                                                <>\n                                                    <Td colSpan={4}><Image mr=\"auto\" ml=\"auto\" borderRadius=\"full\" src={user.avatar} boxSize=\"40px\"\n                                                    /></Td>\n                                                    <Td>{user.first_name}</Td>\n                                                    <Td>{user.last_name}</Td>\n                                                    <Td>{user.email}</Td>\n                                                    <Td colSpan={2} onClick={() => handleEditUser(user, index)} _hover={{ color: '#16BCF1', cursor: \"pointer\" }} isNumeric><EditIcon /></Td>\n                                                    <Td colSpan={2} _hover={{ color: '#16BCF1', cursor: \"pointer\" }} isNumeric><DeleteIcon onClick={() => handleDeleteUser(user.id)} /></Td>\n                                                </>\n                                            }\n                                        </Tr>\n                                    )\n                                })}\n                            </Tbody>\n                        </Table>\n                        <Box d=\"flex\" width={[\"320px\"]} p=\"8\" ml=\"auto\" mr=\"auto\" flexDirection='column' justifyContent=\"center\">\n                            {users.length ?\n                                <Paginator\n                                    pagesQuantity={pagesQuantity}\n                                    currentPage={currentPage}\n                                    onPageChange={setCurrentPage}\n                                >\n                                    <Container align=\"center\" justify=\"space-between\" w=\"full\" p={4}>\n                                        <Previous>\n                                            Previous\n                                            {/* Or an icon from `react-icons` */}\n                                        </Previous>\n                                        <PageGroup isInline align=\"center\" />\n                                        <Next>\n                                            Next\n                                            {/* Or an icon from `react-icons` */}\n                                        </Next>\n                                    </Container>\n                                </Paginator> :\n                                null}\n                        </Box>\n                    </>\n                ) :\n                    <ListSkeleton />\n                }\n            </Box>\n\n        </Box >\n\n    );\n};\n\nexport default List;\n","import {\n    Stack,\n    Box,\n    Text\n} from '@chakra-ui/react';\n\nconst PageNotFound = () => {\n\n\n    return (\n        <Box minH=\"100vh\" d=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n            <Stack spacing={3} minW=\"360px\">\n                <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n                    <Text\n                        fontSize={[\"4vw\", \"2vw\"]}\n                        bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n                        bgClip=\"text\"\n                        textAlign=\"center\"\n                    >\n                        Page Not Found\n                    </Text>\n                </Box>\n            </Stack>\n        </Box>\n\n    );\n};\n\nexport default PageNotFound;\n","import React from 'react';\nimport {\n  ChakraProvider,\n  Box,\n  theme,\n} from '@chakra-ui/react';\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Login from './pages/Login'\nimport Signup from './pages/Signup'\nimport List from './pages/List'\nimport PageNotFound from './pages/PageNotFound'\n\nfunction App() {\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Box textAlign=\"center\" fontSize=\"xl\">\n        <Router>\n          <Box d=\"flex\" m=\"4\" flexDirection=\"row\" flexWrap=\"wrap\" justifyContent=\"flex-end\" alignItems=\"center\">\n            <ColorModeSwitcher />\n          </Box>\n          <Switch>\n            <Route exact path=\"/\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route exact path=\"/list\">\n              <List />\n            </Route>\n            <Route path=\"*\">\n              <PageNotFound />\n            </Route>\n          </Switch>\n        </Router>\n      </Box>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}